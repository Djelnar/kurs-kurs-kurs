{"stage":1,"title":"Props как способ работы с данными","subTitle":"Реакт это не только про вёрстку, но и про работу с данными","markdown":"В прошлом уроке мы изучили АПИ Реакта и узнали про функцию [`React.createElement(type, props, children)`](https://reactjs.org/docs/react-api.html#createelement). Давайте поговорим о пропах подробнее.\n\n## Пропы\n\nПомните третий урок, где мы говорили про базовый Джаваскрипт? В Джсе есть тип данных [`Object`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object) — данные в формате `ключ: значение`, например,\n\n```js\n{\n  isUpdated: true,\n  title: \"2-комнатная квартира в центре Москвы\"\n}\n```\n\nКстати, вопрос: назовёте сходу типы данных у каждого из ключей? ответ: `Boolean` и `String`.\n\nПропы — это объект со всеми пропами, которые вы передаёте или получаете в компоненте. Сложно? Так давайте сделаем свои компоненты и попробуем разобраться!\n\n<iframe width=\"100%\" height=\"300\" src=\"//jsfiddle.net/yd2s3md4/10/embedded/js,html,result/\" allowpaymentrequest allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n> Сложно читать? Следующий урок избавит нас от необходимости писать `React.createElement` и мы перейдём к `<Movie title=\"2001: A Space Odyssey\" />`\n\nТут нужно сделать ремарку: **создание** компонента — это объявление его через функцию, а **вызов** компонента (использование) — это передача его в `React.createElement()`. Почему можно передавать как функции, так и строки типа `'img'` или `'h1'`? Потому что Реакт сам и разбирается где ваш компонент, а где хтмл-тег.\n\nВажное отличие пропов от атрибутов в ХТМЛ это факт, что туда можно передавать любые типы данных. Если вы помните, в атрибутах можно передавать только строки (`isUpdated=\"true\"`), в Реакте можно даже функции. Это знание нам пригодится в 8 и 9 уроках.\n\n## Чилдрен\n\nЧилдрен это то, что находится между открывающим и закрывающим тегом (`<h1>title</h1>`). Чилдрен доступен под `props.children` и передаётся третьим параметром в `React.createElement()` и, конечно же, тоже может быть любого типа — хоть функцией, а об этом уже в 19 уроке.\n\n## Итог\n\nВ этом самом маленьком уроке (!) мы разобрались с пропами подробнее и заложили понимание на будущее. Тезисно, пропы — это атрибуты компонентов, в которые можно передавать данные любых типов.\n\nКстати, почему **пропс**? Потому что **properties** — свойства.\n<!--stackedit_data:\neyJoaXN0b3J5IjpbMTAyMDkyNjg4MF19\n-->","id":"uO0YmAhuII","stageId":"9wO7ihaBIk"}