{"stage":2,"title":"Правила вёрстки","subTitle":"Прежде чем идти дальше, нужно научиться нормально верстать","markdown":"Привет! Вы получили первое большое задание — сверстать макет UberEats.\n\nНо мы до этого проходили достаточно примитивные вещи, а сейчас — огромный пакет. Как подступиться?\n\n<p class=\"announce\">\n  Помните главный принцип: от общего к частному.\n</p>\n\nЭтого принципа вам нужно придерживаться всегда: когда вы разбиваете задачи на мелкие, когда вы верстаете целую страницу, когда вы придумываете имена селекторами. От общего к частному.\n\n## Чистый код\n\nПервое, что вам нужно запомнить — ваш код должен быть чистым. Не идеальным, а чистым.\n\nДаже если вы написали говнокод, он должен быть красиво отформатирован: нельзя, чтобы у кода плясал стиль — отступы, иМеНоВАнИе ТеГоВ и КЛ_АССОВ.\n\nНо помните, что стиль кода не должен быть причиной для споров. Просто используйте общедоступный стайлгайд ([codeguide.co](http://codeguide.co) для вёрстки, [airbnb/javascript](https://github.com/airbnb/javascript) для джса), настройте редактор на него и забудьте. Не тратьте ваше время на споры про табы или пробелы — вам нужно код писать, а не этой мелочью заниматься.\n\nВ Вскоде есть встроенный форматтер для вёрстки, а для Джса можно ставить [prettier](http://prettier.io).\n\n## Семантика\n\nЧасто спрашивают \"зачем нужны все эти теги, если можно просто дивами пользоваться! это же не так неудобно\".\n\nСемантика нужна людям и машинами: людям она помогает отделять логические блоки, машинам — распознавать разметку и строить понимание страницы.\n\nЕсли вы будете видеть `<footer>` в хедере, вы же удивитесь? А если `<aside>` для оформления блоков-этажей? Странно ведь будет: вы же не едите сок вилкой, верно?\n\nСемантичный код удобно считывать: «о, здесь навигация, раз она в `<nav>`, а здесь у нас какой-то большой блок, раз он в `<section>`».\n\n## Используйте готовые решения\n\nНе плодите своих велосипедов, используйте готовое решение. Используйте `normalize.css`, а не руками пишите `* { padding: 0 }`.\n\nВ будущем мы познакомимся с пакетным менеджером для фронтэнда и бэкэнда на джаваскрипте: [npm](https://npmjs.com).\n\n## Стилизуйте только по классам\n\nВ вёрстке принято стилизовать только по классам: по тегам слишком опасно, а айди нужен для внутренних ссылок на блоки и для джаваскрипта.\n\nОчень плохо\n\n```css\nh1 {\n}\n#title {\n}\nheader > h1 {\n}\nfooter ul li {\n}\n```\n\n## Списки используйте только для списков\n\nНе нужно оформлять элементы через `ul / li` — списки используются только для списков в тексте, их не нужно тащить для оформления списка карточек или чего-то ещё.\n\n## Стройте страницу по голым этажам, а потом — стилизуйте\n\nПервое, что нужно сделать в вёрстке — накидать каркас страницы, а потом его стилизовать.\n\nВ дизайне и вёрстке есть термин \"этаж\" — это блок. Насколько я помню, термин прошёл из [Бюро](https://bureau.ru), про этажи наглядно раскрывается в этих советах:\n\n* [Как комбинировать ритмы колоночных сеток?](https://bureau.ru/bb/soviet/20131104/),\n* Как теория близости работает в интерфейсе: часть [первая](https://bureau.ru/bb/soviet/20160510/) и [вторая](https://bureau.ru/bb/soviet/20160503/),\n* [Что должен знать дизайнер об интерлиньяжах, полях, отступах, кеглях, выравниваниях и модульных сетках?](https://bureau.ru/bb/soviet/20140224/).\n\nОтверстайте страницу сначала этажами, а потом — стилизуйте. Так будет проще найти общие элементы и не придется плодить стили.\n\n## Используйте БЭМ\n\n[БЭМ](https://ru.bem.info) — это правила именования классов. БЭМ — это компонентный подход \"на минималках\", как говорится: если у вас под рукой только ХТМЛ и ЦСС, то БЭМ отлично подойдёт.\n\nЕсли вам кто-то рекомендует не использовать БЭМ, то это потому, что человек уже использует другие способы компонентного подхода: [CSS Modules](https://github.com/css-modules/css-modules) или [styled-components](https://www.styled-components.com/).\n\nТак что запомните: БЭМ отличный, когда под рукой только ХТМЛ и ЦСС.\n\n## Следите за дизайном\n\nОбращайте внимание на шрифты, отступы, не вздумайте от себя что-то придумывать, если дизайн кривой — скажите об этом дизайнеру, а не пытайтесь сами изменить.\n\nОчень часто фронтэндеры убивают дизайн — не обращают внимания на шрифты, отступы между элементами ставят от пизды. Это неправильно.\n","previous":["Z85TwJEQNd","nHdviS9Jil","kK6TqBobfl","Wfn3j53w5G","vUP7iRK2my","mGpNZTKciZ","DNmsGGToly"],"id":"iZzoQdvKTy","stageId":"u8xwpb0kWl"}