{"stage":2,"title":"Формы в ХТМЛ","subTitle":"Блеск и нищета форм в ХТМЛ","markdown":"В вебе очень много форм — зайдите на любой сайт, точно найдёте хотя бы один инпут. Сегодня мы поговорим о том, как строить формы — это не очень-то и легко, на самом деле: ведь нужно не забывать про <abbr title=\"accessibility, 11 — потому что между `a` и `y` 11 букв\">a11y</abbr>.\n\n## [`form`](http://htmlreference.io/element/form/)\n\nСамый базовый элемент, в котором находятся другие контролы — инпуты, чекбоксы, селекты, кнопки.\n\nДавайте разберём частые и непонятные атрибуты, остальные — посмотрите на cssreference.\n\n### action — адрес\n\nВ экшен мы указываем адрес, куда отправится форма. Обычно это адрес ХТТП-ресурса, который сможет принять запрос (помните второй урок?). Например, если у вас форма поиска, то, скорее всего, у сервера будет ресурс `/search` (но это не факт!).\n\n### method\n\nХТТП-метод, который принимает запрос: гет или пост. Уточняйте у своего бэкэндера.\n\n### enctype\n\nЕсли расшифровывать, **encoding type** — формат, в котором нужно передать данные. Уточняйте у бэкэндера.\n\nЗначения:\n\n* `enctype=\"application/x-www-form-urlencoded\"` — дефолт,\n* `enctype=\"text/plain\"` — чистый текст, используется редко,\n* `enctype=\"multipart/form-data\"` — для загрузки файлов.\n\n## [`select`](http://htmlreference.io/element/select/) и [`option`](http://htmlreference.io/element/option/)\n\nСелект это выпадающий список со значениями, которые указаны через `option`.\n\n<iframe width=\"100%\" height=\"300\" src=\"//jsfiddle.net/4f4pcku7/embedded/result,html\" allowpaymentrequest allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n### Про `option` в `value`\n\nУ `option` есть атрибут `value` — это то, что используется как данные при отправке формы. Между тегами может быть написано всё что угодно, но уйдёт значение из `value`.\n\n### Про стилизацию селектов\n\nХочу уточнить, что селекты рисуются системой — поэтому они в разных системах выглядят по-разному. Можно ли их стилизовать? Увы, нет — вы не сможете застилизовать открытый список, но сможете сам селект, если предварительно сбросите стиль через [`appearance`](https://css-tricks.com/almanac/properties/a/appearance/).\n\nНе забывайте про поддержку браузеров! [Работает далеко не во всех](https://caniuse.com/#feat=css-appearance), а в тех, что работает — нужны [вендорные префиксы](https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix) `-moz-` и `-webkit-`.\n\nКак стилизовать тогда без этого свойства? Через позиционирование и [`opacity`](http://cssreference.io/property/opacity/): вы скрываете сам селект, а под него (через `z-index`) кладёте застилизованный элемент (например, кнопку).\n\n## [`button`](http://htmlreference.io/element/button/)\n\nКнопки! Ну тут всё просто: можно задать тип через `type`: либо `submit`, либо `reset` — в первом случае нажатие на кнопки отправит данные на сервер, во втором — сбросит.\n\nПо-умолчанию стоит `submit`, поэтому будьте осторожны — можно случайно заставить кнопку сброса отправлять данные, если забудете проставить тип.\n\n## [`textarea`](http://htmlreference.io/element/textarea/)\n\nБольшое поле ввода.\n\n<iframe width=\"100%\" height=\"300\" src=\"//jsfiddle.net/6mpozguc/embedded/result,html/\" allowpaymentrequest allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\nОбязательное поле `name` — имя контрола, нужно, чтобы разграничивать на сервере одни данные от других (вы же не отправите имя как фамилию, верно?). Кстати, к селекту тоже относится — каждому контролу, с которым взаимодействует пользователь, нужно задавать `name`.\n\n## [`input`](http://htmlreference.io/element/input/)\n\nСамый богатый контрол из всех форм. Дело в том, что он может вести себя абсолютно по-разному только благодаря атрибуту `type`: `text`, `password`, `email`, `number` будут вести себя как обычный инпут ввода, но на мобильных девайсах будет заметна разница: клавиатура будет меняться у `email` и `number`. Ну и, конечно же, нужно будет соблюдать формат: от `email` будет ожидание что там емейл, а в `number` нельзя будет ввести текст.\n\n### `type=\"checkbox\"`\n\nЧекбокс это контролы, которые можно выбрать несколько раз.\n\n<iframe width=\"100%\" height=\"300\" src=\"//jsfiddle.net/puurw9ow/2/embedded/result,html/\" allowpaymentrequest allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n### `type=\"radio\"`\n\nЧем радио отличается от чекбокса? Тем, что из радио под одним `name` можно выбрать только одно значение.\n\n<iframe width=\"100%\" height=\"300\" src=\"//jsfiddle.net/puurw9ow/3/embedded/result,html/\" allowpaymentrequest allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\nКстати, как я сделал так, чтобы при клике на текст выбиралось значение?\n\n## [`label`](http://htmlreference.io/element/label/)\n\nЧерез `label`! Тег лейбл либо обрамляет элемент:\n\n```html\n<label>\n  <input name=\"js-library\" value=\"react\" type=\"radio\">\n  Реакт\n</label>\n```\n\nлибо работает через атрибут `for` и связывается с контролом через `id`:\n\n```html\n<input id=\"js-library-react\" name=\"js-library\" value=\"react\" type=\"radio\">\n<label for=\"js-library-react\">Реакт</label>\n```\n\n## Итог\n\nДавайте запомним правила:\n\n* всегда должен быть тег `form` при работе с формами,\n* нужно не забывать про `name`,\n* в ХТМЛ есть разные контролы — от чекбоксов до текстареи,\n* не забывайте про `label` — не просто воткнуть его на страницу, а обрамить им контрол либо использовать через атрибуты `for` и `id`.\n\n## Задание\n\nЗадания не будет, потому что самая богатая форма уже сделана на [htmlreference](http://htmlreference.io/element/form).\n","previous":["Z85TwJEQNd","nHdviS9Jil","kK6TqBobfl","Wfn3j53w5G","vUP7iRK2my","mGpNZTKciZ","DNmsGGToly","iZzoQdvKTy","dXE2elcH7C"],"id":"4ipvf7K5px","stageId":"u8xwpb0kWl"}