{"stage":1,"title":"Стилизуем вёрстку через ЦСС","subTitle":"Чистая вёрстка это понятно, но как самому стилизовать элементы? Для этого используется ЦСС.","markdown":"Сегодня мы будем говорить про стилизацию страницы, но для начала — разберем прошлое задание.\n\nМой ответ:\n\n![](https://i.imgur.com/LNXrZYC.png)\n\nВёрстка лёгкая и без сюрпризов:\n\n* `title` для заголовка вкладки,\n* `main` как основной тег,\n* `nav` для блока с навигацией,\n* `header` для первого этажа,\n* `section` для остальных,\n* `h1`, `h2`, `h3` для заголовков,\n* `ul`, `li` для списков (кстати, `ul` это **unordered list**, а `li` — **list item**),\n* `aside` для дополнительного контента.\n\nПро `main` и `header` / `nav` / `footer` в нём хорошо сказано [в спефицикации HTML](http://w3c.github.io/html/grouping-content.html#the-main-element):\n\n> The main content area of a document includes content that is unique to that document and **excludes content** that is repeated across a set of documents **such as site navigation links, copyright information, site logos and banners and search forms (unless the document or application’s main function is that of a search form)**.\n\nУточню, что мой ответ не может быть единственно правильным. Если у вас есть вопросы, почему так или иначе — задавайте в чат.\n\n### Про семантику заголовков\n\nПо заголовкам есть небольшая заметка: поисковики очень придирчивы, по сути они читают страницу через заголовки. Есть несколько правил:\n\n* `h1` должен быть один раз на странице,\n* `h2` не должны дублироваться в `section`: если у вас два заголовка `h2` в одном `section`, то это странно,\n\n<p class=\"announce\">Заголовки — про семантику, а не про стиль.</p>\n\nЕсли вам нужно сделать текст с большим шрифтом, то застилизуйте `span` или другой элемент.\n\nПример как плохо: на [странице района](https://www.kalinka-realty.ru/gorod/kvartira/apartamenty/basmannyy/29878/) у Калинки есть карточки жилых комплексов и объектов.\n\nОни выделены `h3` — это приемлимо, но дальше идут блоки `h2` _«Согласие на обработку персональных данных клиентов — физических лиц»_ и _«Связаться»_ — это вообще не имеет никакого отношения к контенту.\n\n<div class=\"aside-wrapper\">\n  <aside class=\"aside\">\n    Кстати, для СЕО я использую расширение <a href=\"https://chrome.google.com/webstore/detail/seo-meta-in-1-click/bjogjfinolnhfhkbipphpdlldadpnmhc\">SEO META in 1 CLICK</a>. Название дурацкое, но свою задачу выполняет.\n  </aside>\n</div>\n\n![](https://i.imgur.com/cMkreHW.png)\n\n## Атрибуты ХТМЛ\n\nНо один сюрприз в моей вёрстке есть: у меня рабочая навигация, у тега `a` есть нечто `href=\"#whoami\"`, а у `section` — `id=\"whoami\"`. Что это такое?\n\nУ тегов есть **атрибуты** — специальные значения для конкретного элемента.\n\nДавайте попробуем с картинками: у тега `img` ([htmlreference](http://htmlreference.io/element/img/)) есть атрибут `src` (source) — адрес и `alt` — описание.\n\n```html\n<img src=\"https://placeimg.com/640/480/arch\" alt=\"Фотография зданий\" />\n```\n\n<div class=\"aside-wrapper\">\n  <img src=\"https://placeimg.com/1024/768/arch\" alt=\"Фотография зданий\" />\n  <aside class=\"aside\">\n    Пример\n  </aside>\n</div>\n\nУ [ссылок](http://htmlreference.io/element/a/) есть атрибут `href` — адрес, куда ссылка ведёт. Почему у меня ссылка была `<a href=\"#whoami\">`? Потому что `#` это ссылка на блок с **айди**: у меня же есть `<section id=\"whoami\">`.\n\nАтрибуты у тегов лучше смотреть на том же [htmlreference.io](http://htmlreference.io).\n\n## Стилизация\n\nМы подобрались к венцу урока: стилизации через ЦСС. Что такое вообще ЦСС (CSS)? Это Cascading Style Sheets, если примитивнее — **правила стилизации элементов**.\n\nВ ЦСС есть два основных концепта: **селекторы** и **правила**. Селекторами мы выбираем элемент, а правилами описываем его поведение.\n\n<div class=\"aside-wrapper\">\n  <aside class=\"aside\">\n    Кстати, какой справочник по ЦСС? Конечно же, <a href=\"http://cssreference.io\">cssreference.io</a>.\n  </aside>\n</div>\n\n### Селекторы\n\nСелекторы это адрес элементов — например, мы можем обратиться ко всем параграфам или картинкам. Как?\n\n```css\np {\n}\n\nimg {\n}\n```\n\nНо как обратиться к конкретным элементам? Для этого у тегов есть атрибут `class` и селектор `.class`. Либо `id` и `#id` — но стилизовать по айди это признак дурного тона.\n\n### Правила\n\nПравила пишутся у конкретных селекторов между фигурными скобками в формате `ключ: значение`. Сложно? Вот пример как сделать у всех параграфов красный цвет:\n\n```css\np {\n  color: red;\n}\n```\n\nПравил очень много, вот список категорий:\n\n* [типографика](http://cssreference.io/typography/),\n* [бэкграунды элементов](http://cssreference.io/backgrounds/),\n* [боксовая модель](http://cssreference.io/box-model/),\n* [флексбоксы](http://cssreference.io/flexbox/),\n* [позиционирование](http://cssreference.io/positioning/),\n* [транзишены (переходы)](http://cssreference.io/transitions/),\n* [анимации](http://cssreference.io/animations/).\n\nКак их все запомнить? Только через практику. В этом уроке мы разберем типографику и бэкграунды элементов, а в следующем — боксовую модель, флексбоксы и позиционирование.\n\n### Типографика в ЦСС\n\nПравил на типографику не так уж много:\n\n* `color`: цвет текста, указывается либо в **hex** либо в **rgb()** значениях,\n* `font-family`: семейство шрифта,\n* `font-size`: размер шрифта (в пикселях),\n* `font-style`: стиль шрифта (`normal`, `italic` или `oblique`),\n* `font-weight`: жирность шрифта от 100 до 900, шаг в 100 (110 нет, 200 — да),\n* `line-height`: высота строки относительно размера шрифта (например, `1.4`),\n* `text-align`: выравнивание текста в блочном элементе: `left` (по-умолчанию), `center` или `right`,\n* `text-shadow`: тень текста.\n\n### Бэкграунды в ЦСС\n\nБэкграундов и того меньше, на cssreference отличная подборка с демками: [cssreference.io/backgrounds](http://cssreference.io/backgrounds/).\n\n### А где это всё писать?\n\nЕсть два способа связать ХТМЛ и ЦСС.\n\n#### Через тег `<style>`:\n\nВ `<head>` можно объявить тег `<style></style>` и там писать ЦСС:\n\n```html\n...\n<head>\n  <style>\n    p {\n      background-color: #282C34;\n    }\n\n    a {\n      color: #C678DD;\n    }\n  </style>\n</head>\n<body>\n  ...\n</body>\n```\n\n#### В отдельном файле `.css`\n\nЛибо вы пишите ЦСС в отдельном файле с расширением `.css` и затем подключаете через `<link rel=\"stylesheet\" href=\"\">`, где `href` это путь к файлу.\n\n```html\n- index.html\n- styles.css\n```\n\nКак выглядит `styles.css`:\n\n```css\np {\n  background-color: #282c34;\n}\n\na {\n  color: #c678dd;\n}\n```\n\nТак выглядит `index.html`:\n\n```html\n...\n<head>\n  <link rel=\"stylesheet\" href=\"./styles.css\">\n</head>\n<body>\n  ...\n</body>\n```\n\nЧто за `./`? Это **относительный** путь: точка означает текущую директорию, а слэш `/` это разделитель.\n\nЕсли бы мы положили `styles.css` в отдельную директорию `css`, то путь был бы `./css/styles.css`.\n\n## Задача\n\nВы должны научиться стилизовать.\n\nВозьмём вчерашнюю страницу и поэкспериментируем с её стилями:\n\n* у `header` должен быть розовый бэкграунд (`#FD739C`) и белый цвет текста,\n* заголовки `h1` и `h2` должны быть с шрифтами без засечек (например, Arial или Helvetica),\n* размер основного шрифта должен стать в 22 пикселя с высотой строки в 34.\n\n## Про стиль кода\n\nСтиль кода — один из первичных навыков разработчика. Если вы пишете плохой, неоптимизированный код — ничего страшного, **если его можно прочесть**. Я давно писал [пост об этом](https://t.me/rodionovrodionovrodionov/5) в своём телеграм-канале.\n\nКак понять, какой код понятный? В вёрстке используется [codeguide.co](http://codeguide.co/).\n\n_К счастью, в джаваскрипт-мире есть [prettier](https://prettier.io/) — утилита, которая сама форматирует код. Больше никаких споров о точках с запятыми!_\n\n_Кстати, в Вскод автоматическое форматирование кода при сохранении — это очень удобно._\n\n## Итог\n\nЭтот урок — примитивный ЦСС. Мы не затронули блочную модель, флексбоксы и позиционирование — это будет в следующих уроках.\n\nСейчас ваша задача научиться стилизовать текст и немного бэкграундов.\n\n<p class=\"announce\">\n  Не забывайте задавать вопросы в чате — там обязательно помогут 💪🏻 <br><br> Помните: нет глупых вопросов, есть лишь страх их задавать.\n</p>\n","previous":["Z85TwJEQNd","nHdviS9Jil","kK6TqBobfl"],"id":"Wfn3j53w5G","stageId":"FhTKluFzm7"}