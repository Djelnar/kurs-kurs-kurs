{"stage":2,"title":"Позиционирование в ЦСС","subTitle":"Не весь ЦСС умещается в блочную модель","markdown":"Помните про флоу документа и блочную модель из пятого урока? Элементы идут друг за другом, между ними есть марджины, а внутри них — паддинги.\n\nНо что делать, когда вам нужно элемент выбить из потока? Допустим, расположить кнопку где-нибудь слева снизу? Как у Гугла кнопка FAB в Материал дизайне.\n\n![](https://i.imgur.com/WoMPIsl.png)\n\n## Позиционирование\n\nДля этого в ЦСС есть методы позиционирования: позицией блока можно управлять через свойства [`position`](https://developer.mozilla.org/en-US/docs/Web/CSS/position) и [`top`](http://cssreference.io/property/top/), [`left`](http://cssreference.io/property/left/), [`right`](http://cssreference.io/property/right/), [`bottom`](http://cssreference.io/property/bottom/).\n\nДефолтное поведение `position: static` — блок учитывает флоу документа и всё у него хорошо. Топ/лефт/райт/боттом не работают.\n\nДругие значения: `absolute`, `relative`, `fixed` и `sticky`.\n\n### Абсолютное `absolute`\n\nЕсли вы укажете `position: absolute` и какие-нибудь значения из топ-лефт-райт-боттом, то элемент будет спозиционирован относительно экрана: `top: 2px; left: 10px` вынесет его сверху влево.\n\n<iframe width=\"100%\" height=\"300\" src=\"//jsfiddle.net/8qp226xv/2/embedded/result,html,css/\" allowpaymentrequest allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n##### Про блочную модель\n\nКак вы видите, абсолютное позиционирование ломает блочную модель: блочные элементы начинают вести себя как инлайн-блочные — занимают не всю ширину, а только контент текста и паддингов.\n\nКак исправить это? Вам нужно, чтобы блок всё равно занимал 100% ширины, а `width: 100%` не помогает (конечно, 100% от чего?).\n\nРастяните блок через `left: 0; right: 0` .\n\n### Относительное `relative`\n\nЕсли **родителю** задать `position: relative`, то его ребёнок с `position: absolute` будет учитываться относительно родителя.\n\n<iframe width=\"100%\" height=\"300\" src=\"//jsfiddle.net/8qp226xv/1/embedded/result,html,css/\" allowpaymentrequest allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n### Зафиксированное `fixed`\n\nПри `fixed` элемент остается фиксированным при скролле.\n\n<iframe width=\"100%\" height=\"300\" src=\"//jsfiddle.net/8qp226xv/3/embedded/result,html,css/\" allowpaymentrequest allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n### Стики `sticky`\n\nПока ещё не во всех браузерах работает ([caniuse.com/position-sticky](https://caniuse.com/#feat=css-sticky)), но в будущем — очень полезная вещь.\n\nДо того, пока блок находится на экране — он ведёт себя в потоке. Когда вы его скроллите и он должен пропасть — он фиксируется как будто `position: fixed`.\n\n_(демка будет работать только в браузерах, которые указаны на ([caniuse.com/position-sticky](https://caniuse.com/#feat=css-sticky))_\n\n<iframe width=\"100%\" height=\"300\" src=\"//jsfiddle.net/8qp226xv/6/embedded/result,html,css/\" allowpaymentrequest allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\n## `z-index`\n\nКогда мы говорим про позиционирование, нужно помнить, что блок размещается по трём сторонам: `x`, `y`, `z`. За `x` и `y` отвечают `left`, `right` и `top`, `bottom`, а как наложить один элемент поверх другого? Используйте `z-index`.\n\n<iframe width=\"100%\" height=\"300\" src=\"//jsfiddle.net/8qp226xv/7/embedded/result,html,css/\" allowpaymentrequest allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n","previous":["Z85TwJEQNd","nHdviS9Jil","kK6TqBobfl","Wfn3j53w5G","vUP7iRK2my","mGpNZTKciZ","DNmsGGToly","iZzoQdvKTy"],"id":"dXE2elcH7C","stageId":"u8xwpb0kWl"}